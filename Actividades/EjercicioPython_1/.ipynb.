# Actividad 2: Diseño de algoritmos en Python
# Juan Carlos Serrano Acosta
# 2001047 N1

# 1. Desarrolla un algoritmo que le pida al usuario por su nombre y que lo salude con su nombre, excepto si se llama “Ana”, “Juan”, y “Pedro”.
nombre = input("Por favor, introduce tu nombre: ")
    
if nombre.lower() in ["ana", "juan", "pedro"]:
  print("¡Buen dia! Me alegra vernos de nuevo.")
else:
  print("¡Buen dia! Encantado de conocerte.")
  print("Mi estimado o estimada", nombre + "! Bienvenido.")

# 2. Desarrolla un algoritmo que por medio de una función, le pida al usuario una lista de N elementos y como resultado invierta el sentido de la lista. 
def invertir_lista():

    n = int(input("Ingrese la cantidad de elementos de la lista: "))
    

    lista = []
    for i in range(n):
        elemento = input(f"Ingrese el elemento {i+1}: ")
        lista.append(elemento)
    
    lista_invertida = lista[::-1]
    
    return lista_invertida

lista_invertida = invertir_lista()
print("Lista invertida:", lista_invertida)

# 3. Desarrolla un algoritmo que le pregunte al usuario cuántos números de la serie de Fibonacci quiere generar y que al final los imprima. 
def fibonacci(n):
    fib_sequence = []
    a, b = 0, 1
    for _ in range(n):
        fib_sequence.append(a)
        a, b = b, a + b
    return fib_sequence

def main():
    try:
        n = int(input("Ingrese cuántos números de la serie de Fibonacci desea generar: "))
        if n <= 0:
            print("Por favor, ingrese un número mayor que cero.")
            return
        fib_sequence = fibonacci(n)
        print("Los primeros", n, "números de la serie de Fibonacci son:")
        print(fib_sequence)
    except ValueError:
        print("Por favor, ingrese un número entero válido.")

main()

# 4. Juego de adivinar el número: Crea un programa que genere un número aleatorio entre 1 y 100, y luego le pida al usuario que adivine el número. 
# El programa debe proporcionar pistas al usuario si el número es mayor o menor que el número objetivo, y seguir solicitando un nuevo intento
# hasta que el usuario adivine correctamente.
import random

def adivinar_numero():
    numero_objetivo = random.randint(1, 100)
    intentos = 0
    
    print("¡Adivina quien con numeros, el número secreto entre 1 y 100!")
    
    while True:
        intento = int(input("Introduce tu acercamiento: "))
        intentos += 1
        
        if intento < numero_objetivo:
            print("El número secreto es mayor que", intento)
        elif intento > numero_objetivo:
            print("El número secreto es menor que", intento)
        else:
            print("¡Felicidades! ¡Has adivinado el número secreto", numero_objetivo, "en", intentos, "intentos!")
            break

adivinar_numero()

# 5. Ejercicio de cálculo de números primos en un rango dado: Escribe un programa que solicite al usuario un rango de números y
# muestre todos los números primos dentro de ese rango.
def es_primo(numero):
    if numero <= 1:
        return False
    elif numero <= 3:
        return True
    elif numero % 2 == 0 or numero % 3 == 0:
        return False
    i = 5
    while i * i <= numero:
        if numero % i == 0 or numero % (i + 2) == 0:
            return False
        i += 6
    return True

def numeros_primos_en_rango(inicio, fin):
    primos = []
    for num in range(inicio, fin + 1):
        if es_primo(num):
            primos.append(num)
    return primos

try:
    inicio = int(input("Ingrese el número inicial del rango: "))
    fin = int(input("Ingrese el número final del rango: "))

    if inicio < 0 or fin < 0:
        print("Por favor, ingrese números positivos.")
    elif inicio > fin:
        print("El número inicial debe ser menor o igual al número final.")
    else:
        primos_en_rango = numeros_primos_en_rango(inicio, fin)
        if primos_en_rango:
            print("Los números primos en el rango de", inicio, "a", fin, "son:")
            print(primos_en_rango)
        else:
            print("No se encontraron números primos en el rango de", inicio, "a", fin)
except ValueError:
    print("Por favor, ingrese números enteros válidos.")

# 6. Ejercicio de implementación de una calculadora básica utilizando funciones: Escribe un programa que solicite al usuario dos números y realice
# operaciones básicas como suma, resta, multiplicación y división utilizando funciones separadas para cada operación.
def suma(a, b):
    return a + b

def resta(a, b):
    return a - b

def multiplicacion(a, b):
    return a * b

def division(a, b):
    if b == 0:
        return "Cuando se divide entre cero tiende al infinito por lo que es incalculable."
    else:
        return a / b

try:
    numero1 = float(input("Ingrese el primer número: "))
    numero2 = float(input("Ingrese el segundo número: "))

    print("Suma:", suma(numero1, numero2))
    print("Resta:", resta(numero1, numero2))
    print("Multiplicación:", multiplicacion(numero1, numero2))
    print("División:", division(numero1, numero2))
except ValueError:
    print("Por favor, solo números.")
